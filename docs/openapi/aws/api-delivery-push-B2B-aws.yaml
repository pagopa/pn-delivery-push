openapi: 3.0.1
info:
  title: >-
    ${stageVariables.ProjectName}-${stageVariables.MicroServiceUniqueName}-${stageVariables.IntendedUsage}
  version: fmPLcqzmTiuIiThI856qWn4lXleinzhpaj5nIIuyX9Y=
servers:
  - url: https://${stageVariables.DnsName}/{basePath}
    variables:
      basePath:
        default: /${stageVariables.ServiceApiPath}
    x-amazon-apigateway-endpoint-configuration:
      disableExecuteApiEndpoint: true
paths:
  /v2.0/notifications/cancel/{iun}:
    put:
      summary: Annullamento notifica
      description: >-
        Permette l'annullamento di una notifica restituendo una presa in carico,
        il processo di annullamento si completa poi in maniera asincrona
      tags:
        - NotificationCancellation
      operationId: notificationCancellation
      parameters:
        - $ref: '#/components/parameters/pathIun'
      responses:
        '202':
          description: Accepted - Richiesta annullamento presa in carico
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RequestStatus'
        '400':
          description: Bad request
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Problem'
        '404':
          description: Not found
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Problem'
        '500':
          description: Internal Server Error
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Problem'
      security:
        - pn-auth-fleet_ApiKeyAuthorizerV2_openapi: []
        - api_key_openapi: []
      x-amazon-apigateway-integration:
        uri: >-
          http://${stageVariables.ApplicationLoadBalancerDomain}:8080/${stageVariables.ServiceApiPath}/v2.0/notifications/cancel/{iun}
        connectionId: ${stageVariables.NetworkLoadBalancerLink}
        httpMethod: ANY
        requestParameters:
          integration.request.header.x-pagopa-pn-cx-id: context.authorizer.cx_id
          integration.request.header.x-pagopa-pn-cx-role: context.authorizer.cx_role
          integration.request.header.x-pagopa-pn-uid: context.authorizer.uid
          integration.request.header.x-pagopa-pn-jti: context.authorizer.cx_jti
          integration.request.header.x-pagopa-pn-cx-type: context.authorizer.cx_type
          integration.request.header.x-pagopa-pn-cx-groups: context.authorizer.cx_groups
          integration.request.header.x-pagopa-pn-src-ch-details: context.authorizer.sourceChannelDetails
          integration.request.header.x-pagopa-pn-src-ch: '''B2B'''
          integration.request.path.iun: method.request.path.iun
        passthroughBehavior: when_no_match
        connectionType: VPC_LINK
        timeoutInMillis: 29000
        type: http_proxy
    options:
      operationId: Options for /v2.0/notifications/cancel/{iun} API CORS
      x-amazon-apigateway-integration:
        uri: >-
          http://${stageVariables.ApplicationLoadBalancerDomain}:8080/${stageVariables.ServiceApiPath}/v2.0/notifications/cancel/{iun}
        connectionId: ${stageVariables.NetworkLoadBalancerLink}
        httpMethod: ANY
        requestParameters:
          integration.request.path.iun: method.request.path.iun
        passthroughBehavior: when_no_match
        connectionType: VPC_LINK
        timeoutInMillis: 29000
        type: http_proxy
  /v2.8/{iun}/legal-facts:
    get:
      summary: Elenco atti opponibili a terzi
      description: >-
        Elenca le informazione di categorizzazione di tutti gli atti opponibili
        a terzi  registrati durante il processo di notifica. <br/>
      tags:
        - LegalFacts
      operationId: retrieveNotificationLegalFactsV28
      parameters:
        - $ref: '#/components/parameters/pathIun'
        - $ref: '#/components/parameters/legalFactsSearchMandateId'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LegalFactListV28'
        '400':
          description: Invalid input
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Problem'
        '404':
          description: Not found
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Problem'
        '500':
          description: Internal Server Error
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Problem'
      security:
        - pn-auth-fleet_ApiKeyAuthorizerV2_openapi: []
        - api_key_openapi: []
      x-amazon-apigateway-integration:
        uri: >-
          http://${stageVariables.ApplicationLoadBalancerDomain}:8080/${stageVariables.ServiceApiPath}/v2.8/{iun}/legal-facts
        connectionId: ${stageVariables.NetworkLoadBalancerLink}
        httpMethod: ANY
        requestParameters:
          integration.request.header.x-pagopa-pn-cx-id: context.authorizer.cx_id
          integration.request.header.x-pagopa-pn-cx-role: context.authorizer.cx_role
          integration.request.header.x-pagopa-pn-uid: context.authorizer.uid
          integration.request.header.x-pagopa-pn-jti: context.authorizer.cx_jti
          integration.request.header.x-pagopa-pn-cx-type: context.authorizer.cx_type
          integration.request.header.x-pagopa-pn-cx-groups: context.authorizer.cx_groups
          integration.request.header.x-pagopa-pn-src-ch-details: context.authorizer.sourceChannelDetails
          integration.request.header.x-pagopa-pn-src-ch: '''B2B'''
          integration.request.path.iun: method.request.path.iun
        passthroughBehavior: when_no_match
        connectionType: VPC_LINK
        timeoutInMillis: 29000
        type: http_proxy
    options:
      operationId: Options for /v2.8/{iun}/legal-facts API CORS
      x-amazon-apigateway-integration:
        uri: >-
          http://${stageVariables.ApplicationLoadBalancerDomain}:8080/${stageVariables.ServiceApiPath}/v2.8/{iun}/legal-facts
        connectionId: ${stageVariables.NetworkLoadBalancerLink}
        httpMethod: ANY
        requestParameters:
          integration.request.path.iun: method.request.path.iun
        passthroughBehavior: when_no_match
        connectionType: VPC_LINK
        timeoutInMillis: 29000
        type: http_proxy
  /{iun}/legal-facts/{legalFactType}/{legalFactId}:
    get:
      deprecated: true
      summary: Singolo atto opponibile a terzi
      description: Permette di scaricare un atto opponibile a terzi <br/>
      tags:
        - LegalFacts
      operationId: retrieveLegalFact
      parameters:
        - $ref: '#/components/parameters/pathIun'
        - $ref: '#/components/parameters/pathLegalFactType'
        - $ref: '#/components/parameters/pathLegalFactId'
        - $ref: '#/components/parameters/legalFactsSearchMandateId'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LegalFactDownloadMetadataResponse'
        '400':
          description: Invalid input
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Problem'
        '404':
          description: Not found
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Problem'
        '500':
          description: Internal Server Error
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Problem'
      security:
        - pn-auth-fleet_ApiKeyAuthorizerV2_openapi: []
        - api_key_openapi: []
      x-amazon-apigateway-integration:
        uri: >-
          http://${stageVariables.ApplicationLoadBalancerDomain}:8080/${stageVariables.ServiceApiPath}/{iun}/legal-facts/{legalFactType}/{legalFactId}
        connectionId: ${stageVariables.NetworkLoadBalancerLink}
        httpMethod: ANY
        requestParameters:
          integration.request.header.x-pagopa-pn-cx-id: context.authorizer.cx_id
          integration.request.header.x-pagopa-pn-cx-role: context.authorizer.cx_role
          integration.request.header.x-pagopa-pn-uid: context.authorizer.uid
          integration.request.header.x-pagopa-pn-jti: context.authorizer.cx_jti
          integration.request.header.x-pagopa-pn-cx-type: context.authorizer.cx_type
          integration.request.header.x-pagopa-pn-cx-groups: context.authorizer.cx_groups
          integration.request.header.x-pagopa-pn-src-ch-details: context.authorizer.sourceChannelDetails
          integration.request.header.x-pagopa-pn-src-ch: '''B2B'''
          integration.request.path.iun: method.request.path.iun
          integration.request.path.legalFactType: method.request.path.legalFactType
          integration.request.path.legalFactId: method.request.path.legalFactId
        passthroughBehavior: when_no_match
        connectionType: VPC_LINK
        timeoutInMillis: 29000
        type: http_proxy
    options:
      operationId: Options for /{iun}/legal-facts/{legalFactType}/{legalFactId} API CORS
      x-amazon-apigateway-integration:
        uri: >-
          http://${stageVariables.ApplicationLoadBalancerDomain}:8080/${stageVariables.ServiceApiPath}/{iun}/legal-facts/{legalFactType}/{legalFactId}
        connectionId: ${stageVariables.NetworkLoadBalancerLink}
        httpMethod: ANY
        requestParameters:
          integration.request.path.iun: method.request.path.iun
          integration.request.path.legalFactType: method.request.path.legalFactType
          integration.request.path.legalFactId: method.request.path.legalFactId
        passthroughBehavior: when_no_match
        connectionType: VPC_LINK
        timeoutInMillis: 29000
        type: http_proxy
  /{iun}/download/legal-facts/{legalFactId}:
    get:
      summary: Singolo atto opponibile a terzi
      description: Permette di scaricare un atto opponibile a terzi <br/>
      tags:
        - LegalFacts
      operationId: downloadLegalFactById
      parameters:
        - $ref: '#/components/parameters/pathIun'
        - $ref: '#/components/parameters/pathLegalFactId'
        - $ref: '#/components/parameters/legalFactsSearchMandateId'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LegalFactDownloadMetadataResponse'
        '400':
          description: Invalid input
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Problem'
        '404':
          description: Not found
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Problem'
        '500':
          description: Internal Server Error
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Problem'
      security:
        - pn-auth-fleet_ApiKeyAuthorizerV2_openapi: []
        - api_key_openapi: []
      x-amazon-apigateway-integration:
        uri: >-
          http://${stageVariables.ApplicationLoadBalancerDomain}:8080/${stageVariables.ServiceApiPath}/{iun}/download/legal-facts/{legalFactId}
        connectionId: ${stageVariables.NetworkLoadBalancerLink}
        httpMethod: ANY
        requestParameters:
          integration.request.header.x-pagopa-pn-cx-id: context.authorizer.cx_id
          integration.request.header.x-pagopa-pn-cx-role: context.authorizer.cx_role
          integration.request.header.x-pagopa-pn-uid: context.authorizer.uid
          integration.request.header.x-pagopa-pn-jti: context.authorizer.cx_jti
          integration.request.header.x-pagopa-pn-cx-type: context.authorizer.cx_type
          integration.request.header.x-pagopa-pn-cx-groups: context.authorizer.cx_groups
          integration.request.header.x-pagopa-pn-src-ch-details: context.authorizer.sourceChannelDetails
          integration.request.header.x-pagopa-pn-src-ch: '''B2B'''
          integration.request.path.iun: method.request.path.iun
          integration.request.path.legalFactId: method.request.path.legalFactId
        passthroughBehavior: when_no_match
        connectionType: VPC_LINK
        timeoutInMillis: 29000
        type: http_proxy
    options:
      operationId: Options for /{iun}/download/legal-facts/{legalFactId} API CORS
      x-amazon-apigateway-integration:
        uri: >-
          http://${stageVariables.ApplicationLoadBalancerDomain}:8080/${stageVariables.ServiceApiPath}/{iun}/download/legal-facts/{legalFactId}
        connectionId: ${stageVariables.NetworkLoadBalancerLink}
        httpMethod: ANY
        requestParameters:
          integration.request.path.iun: method.request.path.iun
          integration.request.path.legalFactId: method.request.path.legalFactId
        passthroughBehavior: when_no_match
        connectionType: VPC_LINK
        timeoutInMillis: 29000
        type: http_proxy
  /{iun}/document/{documentType}:
    get:
      summary: Restituisce il singolo documento identificato dalla documentKey
      description: Permette di scaricare un documento correlato alla notificazione
      tags:
        - DocumentsWeb
      operationId: getDocumentsWeb
      parameters:
        - $ref: '#/components/parameters/pathIun'
        - $ref: '#/components/parameters/legalFactsSearchMandateId'
        - $ref: '#/components/parameters/pathDocumentType'
        - $ref: '#/components/parameters/queryDocumentId'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DocumentDownloadMetadataResponse'
        '400':
          description: Invalid input
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Problem'
        '404':
          description: Not found
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Problem'
        '500':
          description: Internal Server Error
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Problem'
      security:
        - pn-auth-fleet_ApiKeyAuthorizerV2_openapi: []
        - api_key_openapi: []
      x-amazon-apigateway-integration:
        uri: >-
          http://${stageVariables.ApplicationLoadBalancerDomain}:8080/${stageVariables.ServiceApiPath}/{iun}/document/{documentType}
        connectionId: ${stageVariables.NetworkLoadBalancerLink}
        httpMethod: ANY
        requestParameters:
          integration.request.header.x-pagopa-pn-cx-id: context.authorizer.cx_id
          integration.request.header.x-pagopa-pn-cx-role: context.authorizer.cx_role
          integration.request.header.x-pagopa-pn-uid: context.authorizer.uid
          integration.request.header.x-pagopa-pn-jti: context.authorizer.cx_jti
          integration.request.header.x-pagopa-pn-cx-type: context.authorizer.cx_type
          integration.request.header.x-pagopa-pn-cx-groups: context.authorizer.cx_groups
          integration.request.header.x-pagopa-pn-src-ch-details: context.authorizer.sourceChannelDetails
          integration.request.header.x-pagopa-pn-src-ch: '''B2B'''
          integration.request.path.iun: method.request.path.iun
          integration.request.path.documentType: method.request.path.documentType
        passthroughBehavior: when_no_match
        connectionType: VPC_LINK
        timeoutInMillis: 29000
        type: http_proxy
    options:
      operationId: Options for /{iun}/document/{documentType} API CORS
      x-amazon-apigateway-integration:
        uri: >-
          http://${stageVariables.ApplicationLoadBalancerDomain}:8080/${stageVariables.ServiceApiPath}/{iun}/document/{documentType}
        connectionId: ${stageVariables.NetworkLoadBalancerLink}
        httpMethod: ANY
        requestParameters:
          integration.request.path.iun: method.request.path.iun
          integration.request.path.documentType: method.request.path.documentType
        passthroughBehavior: when_no_match
        connectionType: VPC_LINK
        timeoutInMillis: 29000
        type: http_proxy
  /{iun}/legal-facts:
    get:
      deprecated: true
      summary: Elenco atti opponibili a terzi
      description: >-
        Elenca le informazione di categorizzazione di tutti gli atti opponibili
        a terzi  registrati durante il processo di notifica. <br/>
      tags:
        - LegalFacts
      operationId: retrieveNotificationLegalFacts
      x-pagopa-lambda-name: pn-versioningGetNotificationLegalFactsLambda:live
      x-pagopa-lambda-account: core
      parameters:
        - $ref: '#/components/parameters/pathIun'
        - $ref: '#/components/parameters/legalFactsSearchMandateId'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LegalFactList'
        '400':
          description: Invalid input
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Problem'
        '404':
          description: Not found
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Problem'
        '500':
          description: Internal Server Error
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Problem'
      security:
        - pn-auth-fleet_ApiKeyAuthorizerV2_openapi: []
        - api_key_openapi: []
      x-amazon-apigateway-integration:
        uri: >-
          arn:aws:apigateway:${AWS::Region}:lambda:path/2015-03-31/functions/arn:aws:lambda:${AWS::Region}:${AWS::AccountId}:function:pn-versioningGetNotificationLegalFactsLambda:live/invocations
        httpMethod: POST
        requestParameters:
          integration.request.header.x-pagopa-pn-cx-id: context.authorizer.cx_id
          integration.request.header.x-pagopa-pn-cx-role: context.authorizer.cx_role
          integration.request.header.x-pagopa-pn-uid: context.authorizer.uid
          integration.request.header.x-pagopa-pn-jti: context.authorizer.cx_jti
          integration.request.header.x-pagopa-pn-cx-type: context.authorizer.cx_type
          integration.request.header.x-pagopa-pn-cx-groups: context.authorizer.cx_groups
          integration.request.header.x-pagopa-pn-src-ch-details: context.authorizer.sourceChannelDetails
          integration.request.header.x-pagopa-pn-src-ch: '''B2B'''
          integration.request.path.iun: method.request.path.iun
        passthroughBehavior: when_no_match
        contentHandling: CONVERT_TO_TEXT
        timeoutInMillis: 29000
        type: aws_proxy
  /v2.0/{iun}/legal-facts:
    get:
      deprecated: true
      summary: Elenco atti opponibili a terzi
      description: >-
        Elenca le informazione di categorizzazione di tutti gli atti opponibili
        a terzi  registrati durante il processo di notifica. <br/>
      tags:
        - LegalFacts
      operationId: retrieveNotificationLegalFactsV20
      x-pagopa-lambda-name: pn-versioningGetNotificationLegalFactsLambda:live
      x-pagopa-lambda-account: core
      parameters:
        - $ref: '#/components/parameters/pathIun'
        - $ref: '#/components/parameters/legalFactsSearchMandateId'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LegalFactListV20'
        '400':
          description: Invalid input
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Problem'
        '404':
          description: Not found
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Problem'
        '500':
          description: Internal Server Error
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Problem'
      security:
        - pn-auth-fleet_ApiKeyAuthorizerV2_openapi: []
        - api_key_openapi: []
      x-amazon-apigateway-integration:
        uri: >-
          arn:aws:apigateway:${AWS::Region}:lambda:path/2015-03-31/functions/arn:aws:lambda:${AWS::Region}:${AWS::AccountId}:function:pn-versioningGetNotificationLegalFactsLambda:live/invocations
        httpMethod: POST
        requestParameters:
          integration.request.header.x-pagopa-pn-cx-id: context.authorizer.cx_id
          integration.request.header.x-pagopa-pn-cx-role: context.authorizer.cx_role
          integration.request.header.x-pagopa-pn-uid: context.authorizer.uid
          integration.request.header.x-pagopa-pn-jti: context.authorizer.cx_jti
          integration.request.header.x-pagopa-pn-cx-type: context.authorizer.cx_type
          integration.request.header.x-pagopa-pn-cx-groups: context.authorizer.cx_groups
          integration.request.header.x-pagopa-pn-src-ch-details: context.authorizer.sourceChannelDetails
          integration.request.header.x-pagopa-pn-src-ch: '''B2B'''
          integration.request.path.iun: method.request.path.iun
        passthroughBehavior: when_no_match
        contentHandling: CONVERT_TO_TEXT
        timeoutInMillis: 29000
        type: aws_proxy
components:
  parameters:
    legalFactsSearchMandateId:
      name: mandateId
      in: query
      required: false
      description: identificativo della delega, non utilizzato nelle API B2B
      x-pn-intended-usage:
        - WEB
      schema:
        type: string
        format: uuid
    pathIun:
      description: Identificativo Univoco Notifica
      name: iun
      in: path
      required: true
      schema:
        type: string
        minLength: 25
        maxLength: 25
        pattern: ^[A-Z]{4}-[A-Z]{4}-[A-Z]{4}-[0-9]{6}-[A-Z]{1}-[0-9]{1}$
    pathLegalFactType:
      description: Categoria dell'atto opponibile a terzi
      name: legalFactType
      in: path
      required: true
      schema:
        $ref: '#/components/schemas/LegalFactCategory'
    pathLegalFactId:
      description: Identificativo dell'atto opponibile a terzi
      name: legalFactId
      in: path
      required: true
      schema:
        type: string
        pattern: ^[ -~]*$
        maxLength: 1024
    pathDocumentType:
      description: Categoria documento
      name: documentType
      in: path
      required: true
      schema:
        $ref: '#/components/schemas/DocumentCategory'
    queryDocumentId:
      description: Identificativo del documento
      name: documentId
      in: query
      required: true
      schema:
        type: string
        pattern: ^(safestorage:\/\/)?[A-Za-z0-9._-]+$
        maxLength: 512
  schemas:
    RequestStatus:
      description: Response to cancellation async call
      type: object
      properties:
        status:
          description: |
            Cancellation request status:
              - OK
          type: string
        details:
          type: array
          maxItems: 9999
          items:
            $ref: '#/components/schemas/StatusDetail'
      required:
        - status
    StatusDetail:
      description: Detail of response to cancellation async call
      type: object
      required:
        - code
      properties:
        code:
          description: Internal code of the error or warning, in human-readable format
          example: NOTIFICATION_CANCELLATION_ACCEPTED, NOTIFICATION_ALREADY_CANCELLED
          type: string
        level:
          description: |
            informational level of status detail: INFO,WARN, ERR
            ERR (error) by default
          example: INFO
          type: string
        detail:
          description: >-
            A human readable explanation specific to this occurrence of the
            problem.
          example: Parameter not valid
          type: string
    ProblemError:
      properties:
        code:
          description: Internal code of the error, in human-readable format
          example: >-
            PN_PARAMETER_TOO_LONG | PN_PARAMETER_TOO_SHORT | PN_DUPLICATE_ENTRY
            | etc...
          type: string
        element:
          description: Parameter or request body field name for validation error
          example: body.order.item[2].quantity
          type: string
        detail:
          description: >-
            A human readable explanation specific to this occurrence of the
            problem.
          example: Parameter not valid
          maxLength: 1024
          type: string
      required:
        - code
    Problem:
      properties:
        type:
          description: URI reference of type definition
          type: string
        status:
          description: >-
            The HTTP status code generated by the origin server for this
            occurrence of the problem.
          type: number
          example: 503
          maximum: 600
          minimum: 100
          exclusiveMaximum: true
        title:
          description: >-
            A short, summary of the problem type. Written in english and
            readable
          example: Service Unavailable
          maxLength: 64
          pattern: ^[ -~]{0,64}$
          type: string
        detail:
          description: A human readable explanation of the problem.
          example: Request took too long to complete.
          maxLength: 4096
          pattern: ^.{0,4096}$
          type: string
        traceId:
          description: Internal support identifier associated to error
          example: 123e4567-e89b-12d3-a456-426614174000
          type: string
        timestamp:
          description: date and time referred to UTC
          example: '2022-07-27T12:22:33.444Z'
          type: string
          format: date-time
        errors:
          type: array
          minItems: 1
          items:
            $ref: '#/components/schemas/ProblemError'
      required:
        - status
        - errors
    LegalFactCategoryV28:
      title: Tipi di atti opponibili a terzi
      description: >-
        Tipi di atti opponibili a terzi che Piattaforma Notifiche mette a
        disposizione dei suoi utenti. <br/>
          - SENDER_ACK  <br/>
          - DIGITAL_DELIVERY  <br/>
          - ANALOG_DELIVERY  <br/>
          - RECIPIENT_ACCESS <br/>
          - PEC_RECEIPT  <br/>
          - ANALOG_FAILURE_DELIVERY  <br/>
          - NOTIFICATION_CANCELLED  <br/>
          - ANALOG_DELIVERY_TIMEOUT <br/>
      type: string
    LegalFactsIdV28:
      description: Chiavi dei documenti generati durante il processo di consegna cartacea
      type: object
      required:
        - key
        - category
      properties:
        key:
          description: >-
            Chiave dell'atto opponibile a terzi generato durante il processo di
            consegna
          type: string
          pattern: ^(safestorage:\/\/)?[A-Za-z0-9._-]+$
          maxLength: 512
        category:
          $ref: '#/components/schemas/LegalFactCategoryV28'
    LegalFactListElementV28:
      description: Informazioni relative ad un atto opponibile a terzi
      type: object
      required:
        - iun
        - legalFactsId
      properties:
        taxId:
          description: Valorizzato se l'atto si riferisce a uno specifico destinatario
          type: string
          minLength: 11
          maxLength: 16
          pattern: >-
            ^([A-Z]{6}[0-9LMNPQRSTUV]{2}[A-Z]{1}[0-9LMNPQRSTUV]{2}[A-Z]{1}[0-9LMNPQRSTUV]{3}[A-Z]{1})|([0-9]{11})$
        iun:
          description: Identificativo Univoco Notifica a cui l'atto è associato
          type: string
          maxLength: 25
          pattern: ^[A-Z]{4}-[A-Z]{4}-[A-Z]{4}-[0-9]{6}-[A-Z]{1}-[0-9]{1}$
        legalFactsId:
          $ref: '#/components/schemas/LegalFactsIdV28'
    LegalFactListV28:
      title: Elenco atti opponibili
      description: Elenco degli atti opponibili a terzi correlati a una notifica
      type: array
      items:
        $ref: '#/components/schemas/LegalFactListElementV28'
    LegalFactCategory:
      title: Tipi di atti opponibili a terzi
      description: >-
        Tipi di atti opponibili a terzi che Piattaforma Notifiche mette a
        disposizione dei suoi utenti.
          - _SENDER_ACK_: atto di "presa in carico" di una notifica
          - _DIGITAL_DELIVERY_: ...
      type: string
      enum:
        - SENDER_ACK
        - DIGITAL_DELIVERY
        - ANALOG_DELIVERY
        - RECIPIENT_ACCESS
        - PEC_RECEIPT
        - ANALOG_FAILURE_DELIVERY
    LegalFactDownloadMetadataResponse:
      title: Url e metadati per il download di un allegato di una notifica
      description: |-
        I due campi più importanti sono __url__ e __retryAfter__. <br/>
          - __url__ è presente se il file è pronto per essere scaricato ed indica l'url a cui fare GET.
          - __retryAfter__ indica che il file non è stato archiviato e bisognerà aspettare un numero di
            secondi non inferiore a quanto indicato dal campo _retryAfter_. <br/>
      type: object
      required:
        - filename
        - contentLength
      properties:
        filename:
          type: string
        contentLength:
          type: number
          format: decimal32
          example: 54092
          description: dimensione, in byte, del contenuto.
        url:
          type: string
          description: >-
            URL preautorizzato a cui effettuare una richiesta GET per ottenere
            il  contenuto del documento. Presente solo se il documento è pronto
            per il download.
        retryAfter:
          type: number
          format: decimal32
          description: >-
            Stima del numero di secondi da aspettare prima che il contenuto del 
            documento sia scaricabile.
    DocumentCategory:
      title: Tipi di documenti
      description: Tipologie di documenti
      type: string
      enum:
        - AAR
    DocumentDownloadMetadataResponse:
      title: Url e metadati per il download di un documento correlato alla notifica
      description: |-
        I due campi più importanti sono __url__ e __retryAfter__. <br/>
          - __url__ è presente se il file è pronto per essere scaricato ed indica l'url a cui fare GET.
          - __retryAfter__ indica che il file non è stato archiviato e bisognerà aspettare un numero di
            secondi non inferiore a quanto indicato dal campo _retryAfter_. <br/>
      type: object
      required:
        - filename
        - contentLength
      properties:
        filename:
          type: string
        contentLength:
          type: number
          format: decimal32
          example: 54092
          description: dmensione, in byte, del contenuto.
        url:
          type: string
          description: >-
            URL preautorizzato a cui effettuare una richiesta GET per ottenere
            il  contenuto del documento. Presente solo se il documento è pronto
            per il download.
        retryAfter:
          type: number
          format: decimal32
          description: >-
            Stima del numero di secondi da aspettare prima che il contenuto del 
            documento sia scaricabile.
    LegalFactsId:
      description: Chiavi dei documenti generati durante il processo di consegna cartacea
      type: object
      required:
        - key
        - category
      properties:
        key:
          description: >-
            Chiave dell'atto opponibile a terzi generato durante il processo di
            consegna
          type: string
          pattern: ^(safestorage:\/\/)?[A-Za-z0-9._-]+$
          maxLength: 512
        category:
          $ref: '#/components/schemas/LegalFactCategory'
    LegalFactListElement:
      description: Informazioni relative ad un atto opponibile a terzi
      type: object
      required:
        - iun
        - legalFactsId
      properties:
        taxId:
          description: Valorizzato se l'atto si riferisce a uno specifico destinatario
          type: string
          minLength: 11
          maxLength: 16
          pattern: >-
            ^([A-Z]{6}[0-9LMNPQRSTUV]{2}[A-Z]{1}[0-9LMNPQRSTUV]{2}[A-Z]{1}[0-9LMNPQRSTUV]{3}[A-Z]{1})|([0-9]{11})$
        iun:
          description: Identificativo Univoco Notifica a cui l'atto è associato
          type: string
          maxLength: 25
          pattern: ^[A-Z]{4}-[A-Z]{4}-[A-Z]{4}-[0-9]{6}-[A-Z]{1}-[0-9]{1}$
        legalFactsId:
          $ref: '#/components/schemas/LegalFactsId'
    LegalFactList:
      title: Elenco atti opponibili
      description: Elenco degli atti opponibili a terzi correlati a una notifica
      type: array
      items:
        $ref: '#/components/schemas/LegalFactListElement'
    LegalFactCategoryV20:
      title: Tipi di atti opponibili a terzi
      description: >-
        Tipi di atti opponibili a terzi che Piattaforma Notifiche mette a
        disposizione dei suoi utenti. <br/>
          - SENDER_ACK  <br/>
          - DIGITAL_DELIVERY  <br/>
          - ANALOG_DELIVERY  <br/>
          - RECIPIENT_ACCESS <br/>
          - PEC_RECEIPT  <br/>
          - ANALOG_FAILURE_DELIVERY  <br/>
          - NOTIFICATION_CANCELLED  <br/
      type: string
    LegalFactsIdV20:
      description: Chiavi dei documenti generati durante il processo di consegna cartacea
      type: object
      required:
        - key
        - category
      properties:
        key:
          description: >-
            Chiave dell'atto opponibile a terzi generato durante il processo di
            consegna
          type: string
          pattern: ^(safestorage:\/\/)?[A-Za-z0-9._-]+$
          maxLength: 512
        category:
          $ref: '#/components/schemas/LegalFactCategoryV20'
    LegalFactListElementV20:
      description: Informazioni relative ad un atto opponibile a terzi
      type: object
      required:
        - iun
        - legalFactsId
      properties:
        taxId:
          description: Valorizzato se l'atto si riferisce a uno specifico destinatario
          type: string
          minLength: 11
          maxLength: 16
          pattern: >-
            ^([A-Z]{6}[0-9LMNPQRSTUV]{2}[A-Z]{1}[0-9LMNPQRSTUV]{2}[A-Z]{1}[0-9LMNPQRSTUV]{3}[A-Z]{1})|([0-9]{11})$
        iun:
          description: Identificativo Univoco Notifica a cui l'atto è associato
          type: string
          maxLength: 25
          pattern: ^[A-Z]{4}-[A-Z]{4}-[A-Z]{4}-[0-9]{6}-[A-Z]{1}-[0-9]{1}$
        legalFactsId:
          $ref: '#/components/schemas/LegalFactsIdV20'
    LegalFactListV20:
      title: Elenco atti opponibili
      description: Elenco degli atti opponibili a terzi correlati a una notifica
      type: array
      items:
        $ref: '#/components/schemas/LegalFactListElementV20'
  responses: {}
  securitySchemes:
    api_key_openapi:
      type: apiKey
      name: x-api-key
      in: header
    pn-auth-fleet_ApiKeyAuthorizerV2_openapi:
      type: apiKey
      name: x-api-key
      in: header
      x-amazon-apigateway-authtype: custom
      x-amazon-apigateway-authorizer:
        authorizerUri: >-
          arn:aws:apigateway:${AWS::Region}:lambda:path/2015-03-31/functions/arn:aws:lambda:${AWS::Region}:${AWS::AccountId}:function:pn-ApiKeyAuthorizerV2Lambda/invocations
        authorizerResultTtlInSeconds: 60
        identitySource: method.request.header.x-api-key
        type: request
tags:
  - name: HealthCheck
    description: Invocazioni per sapere lo stato del microservizio
  - name: LegalFacts
    description: Recupero degli atti opponibili a terzi generati per una notifica
  - name: NotificationCancellation
    description: Annullamento di una notifica
x-amazon-apigateway-gateway-responses:
  DEFAULT_5XX:
    responseParameters:
      gatewayresponse.header.Access-Control-Allow-Origin: '''*'''
  DEFAULT_4XX:
    responseParameters:
      gatewayresponse.header.Access-Control-Allow-Origin: '''*'''
  BAD_REQUEST_PARAMETERS:
    responseParameters:
      gatewayresponse.header.Access-Control-Allow-Origin: '''*'''
    responseTemplates:
      application/json: >-
        {"status": 400, "title": "VALIDATION ERROR", "traceId":
        "$context.xrayTraceId", "errors": [ { "code": "PN_INVALID_PARAMETERS",
        "detail": "Validation errors: $context.error.validationErrorString" } ]}
  BAD_REQUEST_BODY:
    responseParameters:
      gatewayresponse.header.Access-Control-Allow-Origin: '''*'''
    responseTemplates:
      application/json: >-
        {"status": 400, "title": "VALIDATION ERROR", "traceId":
        "$context.xrayTraceId", "errors": [ { "code": "PN_INVALID_BODY",
        "detail": "Validation errors: $context.error.validationErrorString" } ]}
x-amazon-apigateway-request-validators:
  basic:
    validateRequestBody: true
    validateRequestParameters: true
  params-only:
    validateRequestBody: false
    validateRequestParameters: true
x-amazon-apigateway-request-validator: basic
