openapi: 3.0.1
info:
  title: >-
    ${stageVariables.ProjectName}-${stageVariables.MicroServiceUniqueName}-${stageVariables.IntendedUsage}
  version: '2023-02-27T17:14:29.886Z'
servers:
  - url: https://${stageVariables.DnsName}/{basePath}
    variables:
      basePath:
        default: /${stageVariables.ServiceApiPath}
    x-amazon-apigateway-endpoint-configuration:
      disableExecuteApiEndpoint: true
paths:
  /streams:
    post:
      summary: Crea nuovo stream di eventi
      description: >-
        Viene richiesta la creazione di un flusso di eventi specificando se gli
        eventi saranno  relativi ai cambi di stato o agli eventi di timeline.
        <br/> In risposta, Piattaforma Notifiche, comunicherà un identificativo
        dello stream e il  timestamp di effettiva attivazione del flusso,
        tipicamente pochi secondi dopo che è stata  invocata l'operazione.
      tags:
        - Streams
      operationId: createEventStream
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/StreamCreationRequest'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StreamMetadataResponse'
        '400':
          description: Invalid input
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Problem'
        '500':
          description: Internal Server Error
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Problem'
      security:
        - pn-auth-fleet_ApiKeyAuthorizerV2: []
        - api_key: []
      x-amazon-apigateway-integration:
        uri: >-
          http://${stageVariables.ApplicationLoadBalancerDomain}:8080/${stageVariables.ServiceApiPath}/streams
        connectionId: ${stageVariables.NetworkLoadBalancerLink}
        httpMethod: ANY
        requestParameters:
          integration.request.header.x-pagopa-pn-cx-id: context.authorizer.cx_id
          integration.request.path.proxy: method.request.path.proxy
          integration.request.header.x-pagopa-pn-cx-role: context.authorizer.cx_role
          integration.request.header.x-pagopa-pn-uid: context.authorizer.uid
          integration.request.header.x-pagopa-pn-jti: context.authorizer.cx_jti
          integration.request.header.x-pagopa-pn-src-ch: '''B2B'''
          integration.request.header.x-pagopa-pn-cx-type: context.authorizer.cx_type
          integration.request.header.x-pagopa-pn-cx-groups: context.authorizer.cx_groups
        passthroughBehavior: when_no_match
        connectionType: VPC_LINK
        timeoutInMillis: 29000
        type: http_proxy
      parameters:
        - name: proxy
          in: path
          required: true
          schema:
            type: string
    get:
      summary: Elenca stream di eventi
      description: Elenca gli stream di eventi
      tags:
        - Streams
      operationId: listEventStreams
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StreamListResponse'
        '400':
          description: Invalid input
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Problem'
        '500':
          description: Internal Server Error
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Problem'
      security:
        - pn-auth-fleet_ApiKeyAuthorizerV2: []
        - api_key: []
      x-amazon-apigateway-integration:
        uri: >-
          http://${stageVariables.ApplicationLoadBalancerDomain}:8080/${stageVariables.ServiceApiPath}/streams
        connectionId: ${stageVariables.NetworkLoadBalancerLink}
        httpMethod: ANY
        requestParameters:
          integration.request.header.x-pagopa-pn-cx-id: context.authorizer.cx_id
          integration.request.path.proxy: method.request.path.proxy
          integration.request.header.x-pagopa-pn-cx-role: context.authorizer.cx_role
          integration.request.header.x-pagopa-pn-uid: context.authorizer.uid
          integration.request.header.x-pagopa-pn-jti: context.authorizer.cx_jti
          integration.request.header.x-pagopa-pn-src-ch: '''B2B'''
          integration.request.header.x-pagopa-pn-cx-type: context.authorizer.cx_type
          integration.request.header.x-pagopa-pn-cx-groups: context.authorizer.cx_groups
        passthroughBehavior: when_no_match
        connectionType: VPC_LINK
        timeoutInMillis: 29000
        type: http_proxy
      parameters:
        - name: proxy
          in: path
          required: true
          schema:
            type: string
    options:
      operationId: Options for /streams API CORS
      x-amazon-apigateway-integration:
        uri: >-
          http://${stageVariables.ApplicationLoadBalancerDomain}:8080/${stageVariables.ServiceApiPath}/streams
        connectionId: ${stageVariables.NetworkLoadBalancerLink}
        httpMethod: ANY
        passthroughBehavior: when_no_match
        connectionType: VPC_LINK
        timeoutInMillis: 29000
        type: http_proxy
  /streams/{streamId}:
    parameters:
      - $ref: '#/components/parameters/pathStreamId'
    get:
      summary: Leggi metadati dello stream
      description: Permette di leggere le configurazioni di uno stream di eventi.
      tags:
        - Streams
      operationId: retrieveEventStream
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StreamMetadataResponse'
        '400':
          description: Invalid input
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Problem'
        '500':
          description: Internal Server Error
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Problem'
      security:
        - pn-auth-fleet_ApiKeyAuthorizerV2: []
        - api_key: []
      x-amazon-apigateway-integration:
        uri: >-
          http://${stageVariables.ApplicationLoadBalancerDomain}:8080/${stageVariables.ServiceApiPath}/streams/{streamId}
        connectionId: ${stageVariables.NetworkLoadBalancerLink}
        httpMethod: ANY
        requestParameters:
          integration.request.header.x-pagopa-pn-cx-id: context.authorizer.cx_id
          integration.request.path.proxy: method.request.path.proxy
          integration.request.header.x-pagopa-pn-cx-role: context.authorizer.cx_role
          integration.request.header.x-pagopa-pn-uid: context.authorizer.uid
          integration.request.header.x-pagopa-pn-jti: context.authorizer.cx_jti
          integration.request.header.x-pagopa-pn-src-ch: '''B2B'''
          integration.request.header.x-pagopa-pn-cx-type: context.authorizer.cx_type
          integration.request.header.x-pagopa-pn-cx-groups: context.authorizer.cx_groups
        passthroughBehavior: when_no_match
        connectionType: VPC_LINK
        timeoutInMillis: 29000
        type: http_proxy
      parameters:
        - name: proxy
          in: path
          required: true
          schema:
            type: string
    put:
      summary: Update Stream metadata
      description: >-
        Permette di cambiare le configurazioni dei filtri associati a uno stream
        di eventi
      tags:
        - Streams
      operationId: updateEventStream
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/StreamCreationRequest'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StreamMetadataResponse'
        '400':
          description: Invalid input
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Problem'
        '500':
          description: Internal Server Error
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Problem'
      security:
        - pn-auth-fleet_ApiKeyAuthorizerV2: []
        - api_key: []
      x-amazon-apigateway-integration:
        uri: >-
          http://${stageVariables.ApplicationLoadBalancerDomain}:8080/${stageVariables.ServiceApiPath}/streams/{streamId}
        connectionId: ${stageVariables.NetworkLoadBalancerLink}
        httpMethod: ANY
        requestParameters:
          integration.request.header.x-pagopa-pn-cx-id: context.authorizer.cx_id
          integration.request.path.proxy: method.request.path.proxy
          integration.request.header.x-pagopa-pn-cx-role: context.authorizer.cx_role
          integration.request.header.x-pagopa-pn-uid: context.authorizer.uid
          integration.request.header.x-pagopa-pn-jti: context.authorizer.cx_jti
          integration.request.header.x-pagopa-pn-src-ch: '''B2B'''
          integration.request.header.x-pagopa-pn-cx-type: context.authorizer.cx_type
          integration.request.header.x-pagopa-pn-cx-groups: context.authorizer.cx_groups
        passthroughBehavior: when_no_match
        connectionType: VPC_LINK
        timeoutInMillis: 29000
        type: http_proxy
      parameters:
        - name: proxy
          in: path
          required: true
          schema:
            type: string
    delete:
      summary: Remove Event Stream
      description: >-
        Elimina uno steam di eventi: elimina sia le configurazioni sia tutti gli
        eventi  associati allo stream e non ancora consumati.
      tags:
        - Streams
      operationId: removeEventStream
      responses:
        '204':
          description: OK
        '400':
          description: Bad request
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Problem'
        '500':
          description: Internal Server Error
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Problem'
      security:
        - pn-auth-fleet_ApiKeyAuthorizerV2: []
        - api_key: []
      x-amazon-apigateway-integration:
        uri: >-
          http://${stageVariables.ApplicationLoadBalancerDomain}:8080/${stageVariables.ServiceApiPath}/streams/{streamId}
        connectionId: ${stageVariables.NetworkLoadBalancerLink}
        httpMethod: ANY
        requestParameters:
          integration.request.header.x-pagopa-pn-cx-id: context.authorizer.cx_id
          integration.request.path.proxy: method.request.path.proxy
          integration.request.header.x-pagopa-pn-cx-role: context.authorizer.cx_role
          integration.request.header.x-pagopa-pn-uid: context.authorizer.uid
          integration.request.header.x-pagopa-pn-jti: context.authorizer.cx_jti
          integration.request.header.x-pagopa-pn-src-ch: '''B2B'''
          integration.request.header.x-pagopa-pn-cx-type: context.authorizer.cx_type
          integration.request.header.x-pagopa-pn-cx-groups: context.authorizer.cx_groups
        passthroughBehavior: when_no_match
        connectionType: VPC_LINK
        timeoutInMillis: 29000
        type: http_proxy
      parameters:
        - name: proxy
          in: path
          required: true
          schema:
            type: string
    options:
      operationId: Options for /streams/{streamId} API CORS
      x-amazon-apigateway-integration:
        uri: >-
          http://${stageVariables.ApplicationLoadBalancerDomain}:8080/${stageVariables.ServiceApiPath}/streams/{streamId}
        connectionId: ${stageVariables.NetworkLoadBalancerLink}
        httpMethod: ANY
        passthroughBehavior: when_no_match
        connectionType: VPC_LINK
        timeoutInMillis: 29000
        type: http_proxy
  /streams/{streamId}/events:
    get:
      summary: Leggi progressi notifiche
      description: >-
        Permette di leggere gli eventi presenti nello stream di aggiornamenti e
        indica che  la P.A. ha ricevuto e memorizzato l'evento identificato dal
        parametro _lastEventId_ e tutti gli eventi precedenti. Tali eventi
        potranno essere cancellati dallo stream.
      tags:
        - Events
      operationId: consumeEventStream
      parameters:
        - $ref: '#/components/parameters/pathStreamId'
        - $ref: '#/components/parameters/queryLastEventId'
        - name: proxy
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: OK
          headers:
            retry-after:
              schema:
                type: integer
                format: int32
              description: >-
                Numero di millisecondi di attesa prima di effettuare una nuova
                lettura di eventi. <br/> Sarà valorizzato a zero se ci sono
                eventi in coda che non sono stati forniti per  raggiunta
                dimensione massima della risposta. <br/> Sarà maggiore di zero
                se gli eventi in coda sono stati tutti inviati.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProgressResponse'
        '400':
          description: Invalid input
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Problem'
        '429':
          description: Too Many Requests
          headers:
            retry-after:
              schema:
                type: integer
                format: int32
              description: >-
                Numero di millisecondi di attesa prima di effettuare una nuova
                lettura di eventi.
        '500':
          description: Internal Server Error
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Problem'
      security:
        - pn-auth-fleet_ApiKeyAuthorizerV2: []
        - api_key: []
      x-amazon-apigateway-integration:
        uri: >-
          http://${stageVariables.ApplicationLoadBalancerDomain}:8080/${stageVariables.ServiceApiPath}/streams/{streamId}/events
        connectionId: ${stageVariables.NetworkLoadBalancerLink}
        httpMethod: ANY
        requestParameters:
          integration.request.header.x-pagopa-pn-cx-id: context.authorizer.cx_id
          integration.request.path.proxy: method.request.path.proxy
          integration.request.header.x-pagopa-pn-cx-role: context.authorizer.cx_role
          integration.request.header.x-pagopa-pn-uid: context.authorizer.uid
          integration.request.header.x-pagopa-pn-jti: context.authorizer.cx_jti
          integration.request.header.x-pagopa-pn-src-ch: '''B2B'''
          integration.request.header.x-pagopa-pn-cx-type: context.authorizer.cx_type
          integration.request.header.x-pagopa-pn-cx-groups: context.authorizer.cx_groups
        passthroughBehavior: when_no_match
        connectionType: VPC_LINK
        timeoutInMillis: 29000
        type: http_proxy
    options:
      operationId: Options for /streams/{streamId}/events API CORS
      x-amazon-apigateway-integration:
        uri: >-
          http://${stageVariables.ApplicationLoadBalancerDomain}:8080/${stageVariables.ServiceApiPath}/streams/{streamId}/events
        connectionId: ${stageVariables.NetworkLoadBalancerLink}
        httpMethod: ANY
        passthroughBehavior: when_no_match
        connectionType: VPC_LINK
        timeoutInMillis: 29000
        type: http_proxy
  /v3/api-docs:
    x-amazon-apigateway-any-method:
      operationId: Proxy to pn-delivery public api-docs
      x-amazon-apigateway-integration:
        uri: >-
          http://${stageVariables.ApplicationLoadBalancerDomain}:8080/${stageVariables.ServiceApiPath}/v3/api-docs
        connectionId: ${stageVariables.NetworkLoadBalancerLink}
        httpMethod: ANY
        passthroughBehavior: when_no_match
        connectionType: VPC_LINK
        timeoutInMillis: 29000
        type: http_proxy
components:
  parameters:
    queryLastEventId:
      description: >-
        Identificativo dell'ultimo evento memorizzato dal chiamante, se non
        passato si intende dal primo evento presente nello stream
      name: lastEventId
      in: query
      required: false
      schema:
        type: string
    pathStreamId:
      description: Identificativo dello stream di eventi
      name: streamId
      in: path
      required: true
      schema:
        type: string
        format: uuid
  schemas:
    StreamCreationRequest:
      description: >-
        Richiesta di creazione di uno stream di eventi di avanzamento delle
        notifiche.
      type: object
      required:
        - title
        - eventTYpe
      properties:
        title:
          description: Nome sintetico dello stream
          type: string
        eventType:
          description: |-
            Tipo di eventi presenti nel flusso:
              - _STATUS_: cambiamenti di stato delle notifiche
              - _TIMELINE_: eventi a granularità fine
          type: string
          enum:
            - STATUS
            - TIMELINE
        filterValues:
          description: >-
            Se non _null_ indica l'elenco degli stati o elementi di timeline
            che  si vogliono ricevere.
          type: array
          items:
            type: string
    StreamMetadataResponse:
      description: Configurazioni di un flusso di eventi
      allOf:
        - $ref: '#/components/schemas/StreamCreationRequest'
        - type: object
          required:
            - streamId
            - activationDate
          properties:
            streamId:
              description: Identificativo del flusso di eventi
              type: string
              format: uuid
            activationDate:
              description: Timestamp in cui il flusso di eventi è stato attivato
              type: string
              format: date-time
    StreamListResponse:
      description: Elenco di flussi di eventi
      type: array
      items:
        $ref: '#/components/schemas/StreamListElement'
    StreamListElement:
      type: object
      required:
        - title
        - streamId
      properties:
        streamId:
          type: string
          format: uuid
        title:
          type: string
    ProgressResponse:
      type: array
      items:
        $ref: '#/components/schemas/ProgressResponseElement'
    ProgressResponseElement:
      type: object
      required:
        - eventId
        - timestamp
      properties:
        eventId:
          description: >-
            Elemento che garantisce univocità e ordinamento temporale
            all'interno dello stream
          type: string
        timestamp:
          description: Istante a cui è avvenuto l'evento
          type: string
          format: date-time
        notificationRequestId:
          description: Identificativo della richiesta di notifica
          type: string
        iun:
          description: >-
            Identificativo della notifica, presente solo se la richiesta di
            notifica è  stata accettata.
          type: string
        newStatus:
          $ref: '#/components/schemas/NotificationStatus'
        timelineEventCategory:
          $ref: '#/components/schemas/TimelineElementCategory'
        recipientIndex:
          type: integer
          format: int32
          minimum: 0
          description: Indice del destinatario al quale si riferisce l'evento
        analogCost:
          type: integer
          format: int32
          description: Eventuale costo in eurocent associato all'evento
        channel:
          type: string
          description: >-
            Canale a cui si riferisce l'evento. I valori previsti sono: - Per
            eventi legati a messaggi di cortesia: APPIO, SMS, EMAIL - Per eventi
            legati all'invio digitale: PEC - Per eventi legati all'invio
            analogico: AR_REGISTERED_LETTER, REGISTERED_LETTER_890 - Per eventi
            legati all'invio di raccomandate semplici: SIMPLE_REGISTERED_LETTER
        legalfactIds:
          type: array
          items:
            type: string
          example:
            - PN_LEGAL_FACTS-0002-9G2S-RK3M-JI62-JK9Q
            - PN_LEGAL_FACTS-0002-9G2S-RK3M-JI62-JK9E
          description: chiavi degli eventuali allegati associati all'evento
    ProblemError:
      properties:
        code:
          description: Internal code of the error, in human-readable format
          example: >-
            PN_PARAMETER_TOO_LONG | PN_PARAMETER_TOO_SHORT | PN_DUPLICATE_ENTRY
            | etc...
          type: string
        element:
          description: Parameter or request body field name for validation error
          example: body.order.item[2].quantity
          type: string
        detail:
          description: >-
            A human readable explanation specific to this occurrence of the
            problem.
          example: Parameter not valid
          maxLength: 1024
          type: string
      required:
        - code
    Problem:
      properties:
        type:
          description: URI reference of type definition
          type: string
        status:
          description: >-
            The HTTP status code generated by the origin server for this
            occurrence of the problem.
          type: integer
          format: int32
          example: 503
          maximum: 600
          minimum: 100
          exclusiveMaximum: true
        title:
          description: >-
            A short, summary of the problem type. Written in english and
            readable
          example: Service Unavailable
          maxLength: 64
          pattern: ^[ -~]{0,64}$
          type: string
        detail:
          description: A human readable explanation of the problem.
          example: Request took too long to complete.
          maxLength: 4096
          pattern: ^.{0,4096}$
          type: string
        traceId:
          description: Internal support identifier associated to error
          example: 123e4567-e89b-12d3-a456-426614174000
          type: string
        timestamp:
          description: date and time referred to UTC
          example: '2022-07-27T12:22:33.444Z'
          type: string
          format: date-time
        errors:
          type: array
          minItems: 1
          items:
            $ref: '#/components/schemas/ProblemError'
      required:
        - status
        - errors
    NotificationStatus:
      type: string
      description: |
        stato di avanzamento del processo di notifica:
          * `IN_VALIDATION` - notifica depositata in attesa di validazione
          * `ACCEPTED` - L'ente ha depositato la notifica con successo
          * `REFUSED` - Notifica rifiutata a seguito della validazione
          * `DELIVERING` - L'invio della notifica è in corso
          * `DELIVERED` - La notifica è stata consegnata a tutti i destinatari
          * `VIEWED` - Il destinatario ha letto la notifica entro il termine stabilito
          * `EFFECTIVE_DATE` - Il destinatario non ha letto la notifica entro il termine stabilito
          * `PAID` - Uno dei destinatari ha pagato la notifica
          * `UNREACHABLE` - Il destinatario non è reperibile
          * `CANCELLED` - L'ente ha annullato l'invio della notifica
      enum:
        - IN_VALIDATION
        - ACCEPTED
        - REFUSED
        - DELIVERING
        - DELIVERED
        - VIEWED
        - EFFECTIVE_DATE
        - PAID
        - UNREACHABLE
        - CANCELLED
    TimelineElementCategory:
      type: string
      description: |
        stato di avanzamento del processo di notifica:`
          * `SENDER_ACK_CREATION_REQUEST` - Invio della richiesta di creazione dell'atto opponibile a terzi di presa in carico per il mittente a safe storage
          * `REQUEST_ACCEPTED` - Richiesta di notifica accettata a seguito dei controlli di validazione
          * `REQUEST_REFUSED` - Richiesta di notifica rifiutata per fallimento di validazione
          * `SEND_COURTESY_MESSAGE` - Invio di un messaggio di cortesia
          * `GET_ADDRESS` - Informazioni sulla disponibilità dello specifico indirizzo
          * `PUBLIC_REGISTRY_CALL` - Effettuata la richiesta ai registri pubblici per ottenere l'indirizzo generale
          * `PUBLIC_REGISTRY_RESPONSE` - Ricevuta la risposta dei registri pubblici alla richiesta di ottenimento dell'indirizzo generale
          * `SCHEDULE_ANALOG_WORKFLOW` - Inizio del workflow per invio cartaceo
          * `SCHEDULE_DIGITAL_WORKFLOW` - Inizio del workflow per invio digitale (PEC)
          * `SEND_DIGITAL_DOMICILE` - Invio digitale dell’avviso di notifica
          * `SEND_DIGITAL_PROGRESS` - Ottenuto evento non finale da un invio digitale
          * `SEND_DIGITAL_FEEDBACK` - Ottenuto esito ad un invio digitale
          * `SCHEDULE_REFINEMENT` - Pianificato il perfezionamento per decorrenza termini
          * `REFINEMENT` - Perfezionamento per decorrenza termini
          * `DIGITAL_DELIVERY_CREATION_REQUEST` - Invio della richiesta di creazione dell'atto opponibile a terzi di chiusura del workflow digitale a safe storage
          * `DIGITAL_SUCCESS_WORKFLOW` - Completato con successo il workflow di invio digitale
          * `DIGITAL_FAILURE_WORKFLOW` - Completato con fallimento il workflow di invio digitale
          * `ANALOG_SUCCESS_WORKFLOW` - Completato con successo il workflow di invio cartaceo
          * `ANALOG_FAILURE_WORKFLOW` - Completato con fallimento il workflow di invio cartaceo
          * `PREPARE_SIMPLE_REGISTERED_LETTER` - Preparazione all'invio di raccomandata semplice
          * `SEND_SIMPLE_REGISTERED_LETTER` - Invio di raccomandata semplice
          * `NOTIFICATION_VIEWED_CREATION_REQUEST` - Invio della richiesta di creazione dell'atto opponibile a terzi di presa visione a safe storage
          * `NOTIFICATION_VIEWED` - Perfezionamento per presa visione
          * `PREPARE_ANALOG_DOMICILE` - Preparazione all'invio cartaceo dell’avviso di notifica
          * `SEND_ANALOG_DOMICILE` - Invio cartaceo dell’avviso di notifica
          * `SEND_ANALOG_PROGRESS` - Ricezione evento non finale dell'invio cartaceo
          * `SEND_ANALOG_FEEDBACK` - Ricezione esito dell'invio cartaceo
          * `COMPLETELY_UNREACHABLE` - Tutti i destinatari risultano irraggiungibili
          * `AAR_CREATION_REQUEST` - Invio della richiesta di creazione dell'AAR (Avviso di Avvenuta Ricezione) a safe storage 
          * `AAR_GENERATION` - Generazione dell’AAR (Avviso di Avvenuta Ricezione)
          * `PAYMENT` - Ricezione pagamento della notifica
          * `NOT_HANDLED` - Per la sperimentazione l'invio analogico non è previsto, viene inserito tale elemento di timeline
      enum:
        - SENDER_ACK_CREATION_REQUEST
        - REQUEST_ACCEPTED
        - SEND_COURTESY_MESSAGE
        - GET_ADDRESS
        - PUBLIC_REGISTRY_CALL
        - PUBLIC_REGISTRY_RESPONSE
        - SCHEDULE_ANALOG_WORKFLOW
        - SCHEDULE_DIGITAL_WORKFLOW
        - SEND_DIGITAL_DOMICILE
        - SEND_DIGITAL_PROGRESS
        - SEND_DIGITAL_FEEDBACK
        - REFINEMENT
        - SCHEDULE_REFINEMENT
        - DIGITAL_DELIVERY_CREATION_REQUEST
        - DIGITAL_SUCCESS_WORKFLOW
        - DIGITAL_FAILURE_WORKFLOW
        - ANALOG_SUCCESS_WORKFLOW
        - ANALOG_FAILURE_WORKFLOW
        - PREPARE_SIMPLE_REGISTERED_LETTER
        - SEND_SIMPLE_REGISTERED_LETTER
        - NOTIFICATION_VIEWED_CREATION_REQUEST
        - NOTIFICATION_VIEWED
        - PREPARE_ANALOG_DOMICILE
        - SEND_ANALOG_DOMICILE
        - SEND_ANALOG_PROGRESS
        - SEND_ANALOG_FEEDBACK
        - PAYMENT
        - COMPLETELY_UNREACHABLE
        - REQUEST_REFUSED
        - AAR_CREATION_REQUEST
        - AAR_GENERATION
        - NOT_HANDLED
  responses: {}
  securitySchemes:
    api_key:
      type: apiKey
      name: x-api-key
      in: header
    pn-auth-fleet_ApiKeyAuthorizerV2:
      type: apiKey
      name: x-api-key
      in: header
      x-amazon-apigateway-authtype: custom
      x-amazon-apigateway-authorizer:
        authorizerUri: >-
          arn:aws:apigateway:${AWS::Region}:lambda:path/2015-03-31/functions/arn:aws:lambda:${AWS::Region}:${AWS::AccountId}:function:${stageVariables.ProjectName}-ApiKeyAuthorizerV2Lambda/invocations
        authorizerResultTtlInSeconds: 300
        identitySource: method.request.header.x-api-key
        type: request
tags:
  - name: HealthCheck
    description: >-
      Invocazioni per sapere lo stato del microservizio # il servizio è ancora
      in fase di sviluppo
  - name: Streams
    description: Gestione degli stream di eventi che PN mette a disposizione
  - name: Events
    description: Metodi per la lettura degli eventi dagli stream
x-amazon-apigateway-gateway-responses:
  DEFAULT_5XX:
    responseParameters:
      gatewayresponse.header.Access-Control-Allow-Origin: '''*'''
  DEFAULT_4XX:
    responseParameters:
      gatewayresponse.header.Access-Control-Allow-Origin: '''*'''
